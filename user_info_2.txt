// 1. Вставить параметр salary из окружения в request
// 2. Вставить параметр age из окружения в age
// 3. Вставить параметр name из окружения в name
// 4. Отправить запрос.
// Статус код 200
pm.test("Status code is 200",function(){
    pm.response.to.have.status(200);

});

// 6. Спарсить response body в json.
var jsonData=pm.response.json();
// 7. Спарсить request.
var req = request.data;


// 8.Проверить, что json response имеет параметр start_qa_salary
pm.test("Verify start_qa_salary", function () {
    pm.expect(jsonData).to.have.property("start_qa_salary");
});

// 9.Проверить, что json response имеет параметр qa_salary_after_6_months
pm.test("Verify qa_salary_after_6_months", function () {
    pm.expect(jsonData).to.have.property("qa_salary_after_6_months");
});


// 10.Проверить, что json response имеет параметр qa_salary_after_12_months
pm.test("Verify qa_salary_after_12_months", function () {
    pm.expect(jsonData).to.have.property("qa_salary_after_12_months");
});
// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
pm.test("Verify qa_salary_after_1.5_year", function () {
    pm.expect(jsonData).to.have.property("qa_salary_after_1.5_year");
});

// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
pm.test("Verify qa_salary_after_3.5_years", function () {
    pm.expect(jsonData).to.have.property("qa_salary_after_3.5_years");
});
// 13. Проверить, что json response имеет параметр person
pm.test("Verify property person", function () {
    pm.expect(jsonData).to.have.property("person");
});

// 14.Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
var resp_start_qa_salary = jsonData.start_qa_salary;
var req = request.data;
var req_start_qa_salary = jsonData.start_qa_salary;
console.log("Resp_start_qa_salary = " + resp_start_qa_salary);
console.log("Req_start_qa_salary = " + req_start_qa_salary);
pm.test("start_qa_salary", function () {
    pm.expect(resp_start_qa_salary).to.eql(req_start_qa_salary);
});

// 15.Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
var resp_qa_salary_after_6_months = jsonData.qa_salary_after_6_months;
var req = request.data;

console.log("Resp_qa_salary_after_6_months = " + resp_qa_salary_after_6_months);

pm.test("qa_salary_after_6_months", function () {
    pm.expect(resp_qa_salary_after_6_months).to.eql(req_start_qa_salary*2);
});

// 16.Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
var resp_qa_salary_after_12_months = jsonData.qa_salary_after_12_months;
var req = request.data;

console.log("Resp_qa_salary_after_12_months = " + resp_qa_salary_after_12_months);

pm.test("qa_salary_after_12_months", function () {
    pm.expect(resp_qa_salary_after_12_months).to.eql(req_start_qa_salary*2.7);
});

// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
var resp_qa_salary_after_1_5_year = jsonData["qa_salary_after_1.5_year"]
var req = request.data;

console.log("Resp_qa_salary_after_1.5_year = " + resp_qa_salary_after_1_5_year);

pm.test("qa_salary_after_1.5_year", function () {
    pm.expect(resp_qa_salary_after_1_5_year).to.eql(req_start_qa_salary*3.3);
});

// 18.Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
var resp_qa_salary_after_3_5_years = jsonData["qa_salary_after_3.5_years"]
var req = request.data;

console.log("Resp_qa_salary_after_3.5_years = " + resp_qa_salary_after_3_5_years);

pm.test("qa_salary_after_3.5_years", function () {
    pm.expect(resp_qa_salary_after_3_5_years).to.eql(req_start_qa_salary*3.8);
});

// 19.Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
var resp_salary_u_name = jsonData.person.u_name[1];
console.log("resp_salary_u_name = " + resp_salary_u_name);
pm.test("salary_u_name", function () {
    pm.expect(resp_salary_u_name).to.eql(req_start_qa_salary);
});

// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
var resp_u_age = jsonData.person.u_age;
var req = request.data;
var req_u_age = req.age;
console.log("Resp_u_age = " , resp_u_age);
console.log("Req_u_age = " , req_u_age);
pm.test("salary_u_name", function () {
    pm.expect(resp_u_age).to.eql(+req_u_age);
});

// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
var resp_u_salary_5_years = jsonData.person.u_salary_5_years;
var req = request.data;

console.log("Resp_u_salary_5_years = " + resp_u_salary_5_years);

pm.test("u_salary_5_years", function () {
    pm.expect(resp_u_salary_5_years).to.eql(req_start_qa_salary*4.2);
});


// 22. Написать цикл который выведет в консоль по порядку элементы списка из параметра person.
var person=(Object.keys(jsonData.person));

 for ( i=0;i<3;i++) {
    console.log(person[i])
}
